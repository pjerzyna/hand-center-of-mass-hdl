// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module design_1_v_demosaic_0_0_ZipperRemoval_Pipeline_VITIS_LOOP_1056_2 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        imgRgb_dout,
        imgRgb_num_data_valid,
        imgRgb_fifo_cap,
        imgRgb_empty_n,
        imgRgb_read,
        imgUnzip_din,
        imgUnzip_num_data_valid,
        imgUnzip_fifo_cap,
        imgUnzip_full_n,
        imgUnzip_write,
        p_0_1_0_0_0932_lcssa950975,
        p_0_0_0_0_0930_lcssa948973,
        p_0_2_0_0_0934_lcssa946971,
        conv2_i_i_lcssa969,
        loopWidth,
        zext_ln1040,
        rhs_V_2_out,
        rhs_V_2_out_ap_vld,
        rhs_V_out,
        rhs_V_out_ap_vld,
        rhs_out,
        rhs_out_ap_vld,
        p_0_0_0483_1944_out,
        p_0_0_0483_1944_out_ap_vld,
        p_0_0_0480942_out_i,
        p_0_0_0480942_out_o,
        p_0_0_0480942_out_o_ap_vld,
        p_0_0_0481940_out_i,
        p_0_0_0481940_out_o,
        p_0_0_0481940_out_o_ap_vld,
        p_0_0_0482938_out_i,
        p_0_0_0482938_out_o,
        p_0_0_0482938_out_o_ap_vld,
        p_0_0_0483935_out_i,
        p_0_0_0483935_out_o,
        p_0_0_0483935_out_o_ap_vld
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [29:0] imgRgb_dout;
input  [1:0] imgRgb_num_data_valid;
input  [1:0] imgRgb_fifo_cap;
input   imgRgb_empty_n;
output   imgRgb_read;
output  [29:0] imgUnzip_din;
input  [1:0] imgUnzip_num_data_valid;
input  [1:0] imgUnzip_fifo_cap;
input   imgUnzip_full_n;
output   imgUnzip_write;
input  [9:0] p_0_1_0_0_0932_lcssa950975;
input  [9:0] p_0_0_0_0_0930_lcssa948973;
input  [9:0] p_0_2_0_0_0934_lcssa946971;
input  [9:0] conv2_i_i_lcssa969;
input  [16:0] loopWidth;
input  [15:0] zext_ln1040;
output  [9:0] rhs_V_2_out;
output   rhs_V_2_out_ap_vld;
output  [9:0] rhs_V_out;
output   rhs_V_out_ap_vld;
output  [9:0] rhs_out;
output   rhs_out_ap_vld;
output  [9:0] p_0_0_0483_1944_out;
output   p_0_0_0483_1944_out_ap_vld;
input  [9:0] p_0_0_0480942_out_i;
output  [9:0] p_0_0_0480942_out_o;
output   p_0_0_0480942_out_o_ap_vld;
input  [9:0] p_0_0_0481940_out_i;
output  [9:0] p_0_0_0481940_out_o;
output   p_0_0_0481940_out_o_ap_vld;
input  [9:0] p_0_0_0482938_out_i;
output  [9:0] p_0_0_0482938_out_o;
output   p_0_0_0482938_out_o_ap_vld;
input  [9:0] p_0_0_0483935_out_i;
output  [9:0] p_0_0_0483935_out_o;
output   p_0_0_0483935_out_o_ap_vld;

reg ap_idle;
reg imgRgb_read;
reg imgUnzip_write;
reg rhs_V_2_out_ap_vld;
reg rhs_V_out_ap_vld;
reg rhs_out_ap_vld;
reg p_0_0_0483_1944_out_ap_vld;
reg[9:0] p_0_0_0480942_out_o;
reg p_0_0_0480942_out_o_ap_vld;
reg[9:0] p_0_0_0481940_out_o;
reg p_0_0_0481940_out_o_ap_vld;
reg[9:0] p_0_0_0482938_out_o;
reg p_0_0_0482938_out_o_ap_vld;
reg[9:0] p_0_0_0483935_out_o;
reg p_0_0_0483935_out_o_ap_vld;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
reg   [0:0] icmp_ln1056_reg_703;
reg   [0:0] icmp_ln1062_reg_707;
reg    ap_predicate_op41_read_state2;
reg    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
reg   [0:0] icmp_ln1114_reg_711;
reg   [0:0] icmp_ln1114_reg_711_pp0_iter2_reg;
reg    ap_block_state4_pp0_stage0_iter3;
reg    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln1056_fu_207_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    imgRgb_blk_n;
wire    ap_block_pp0_stage0;
reg    imgUnzip_blk_n;
reg    ap_block_pp0_stage0_11001;
reg   [0:0] icmp_ln1056_reg_703_pp0_iter1_reg;
wire   [0:0] icmp_ln1062_fu_219_p2;
wire   [0:0] icmp_ln1114_fu_225_p2;
reg   [0:0] icmp_ln1114_reg_711_pp0_iter1_reg;
reg   [9:0] rhs_1_reg_715;
reg   [9:0] rhs_1_reg_715_pp0_iter2_reg;
reg   [9:0] rhs_V_2_reg_723;
reg   [9:0] rhs_V_2_reg_723_pp0_iter2_reg;
reg   [9:0] rhs_V_4_reg_731;
reg   [9:0] rhs_V_4_reg_731_pp0_iter2_reg;
wire   [0:0] icmp_ln1027_fu_404_p2;
reg   [0:0] icmp_ln1027_reg_739;
wire   [0:0] icmp_ln1031_fu_410_p2;
reg   [0:0] icmp_ln1031_reg_744;
wire   [0:0] icmp_ln1031_1_fu_416_p2;
reg   [0:0] icmp_ln1031_1_reg_749;
wire   [0:0] icmp_ln1027_1_fu_422_p2;
reg   [0:0] icmp_ln1027_1_reg_754;
reg   [9:0] r_V_reg_759;
reg   [9:0] g_V_reg_764;
reg   [9:0] b_V_reg_769;
reg    ap_condition_exit_pp0_iter2_stage0;
reg   [16:0] x_fu_106;
wire   [16:0] x_2_fu_213_p2;
wire    ap_loop_init;
reg   [16:0] ap_sig_allocacmp_x_1;
reg   [9:0] rhs_fu_110;
reg   [9:0] rhs_V_fu_114;
wire   [9:0] trunc_ln1064_fu_245_p1;
reg   [9:0] rhs_V_1_fu_118;
reg   [9:0] p_0_0_0483_1944_fu_122;
wire   [9:0] zext_ln1087_fu_400_p1;
reg    ap_block_pp0_stage0_01001;
wire   [16:0] zext_ln1040_cast_fu_175_p1;
wire   [7:0] trunc_ln1_fu_312_p4;
wire   [8:0] lshr_ln1084_1_fu_326_p4;
wire   [6:0] lshr_ln1084_2_fu_340_p4;
wire   [6:0] trunc_ln1084_1_fu_354_p4;
wire   [8:0] zext_ln1084_fu_322_p1;
wire   [8:0] zext_ln1084_1_fu_364_p1;
wire   [8:0] add_ln1084_fu_368_p2;
wire   [9:0] zext_ln1084_2_fu_374_p1;
wire   [9:0] zext_ln1084_3_fu_336_p1;
wire   [9:0] add_ln1084_1_fu_378_p2;
wire   [9:0] zext_ln1084_4_fu_350_p1;
wire   [9:0] lum_fu_384_p2;
wire   [6:0] op_assign_fu_390_p4;
wire   [10:0] ret_V_6_fu_428_p3;
wire   [10:0] zext_ln1495_1_fu_435_p1;
wire   [10:0] zext_ln1495_3_fu_443_p1;
wire   [10:0] add_ln1495_fu_447_p2;
wire   [11:0] zext_ln1495_5_fu_453_p1;
wire   [11:0] zext_ln1495_fu_439_p1;
wire   [11:0] ret_V_fu_457_p2;
wire   [10:0] ret_V_7_fu_473_p3;
wire   [10:0] zext_ln1495_6_fu_480_p1;
wire   [10:0] zext_ln1495_7_fu_488_p1;
wire   [10:0] add_ln1495_2_fu_492_p2;
wire   [11:0] zext_ln1495_8_fu_498_p1;
wire   [11:0] zext_ln1495_2_fu_484_p1;
wire   [11:0] ret_V_3_fu_502_p2;
wire   [10:0] ret_V_8_fu_518_p3;
wire   [10:0] zext_ln1495_9_fu_525_p1;
wire   [10:0] zext_ln1495_10_fu_533_p1;
wire   [10:0] add_ln1495_4_fu_537_p2;
wire   [11:0] zext_ln1495_11_fu_543_p1;
wire   [11:0] zext_ln1495_4_fu_529_p1;
wire   [11:0] ret_V_5_fu_547_p2;
wire   [0:0] xor_ln1031_fu_589_p2;
wire   [0:0] xor_ln1031_1_fu_599_p2;
wire   [0:0] and_ln1099_fu_594_p2;
wire   [0:0] and_ln1099_1_fu_604_p2;
wire   [0:0] or_ln1099_fu_609_p2;
wire   [9:0] select_ln1099_2_fu_627_p3;
wire   [9:0] select_ln1099_fu_615_p3;
wire   [9:0] select_ln1099_1_fu_621_p3;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
reg    ap_condition_514;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_done_reg = 1'b0;
end

design_1_v_demosaic_0_0_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter2_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter2_stage0)) begin
            ap_enable_reg_pp0_iter3 <= 1'b0;
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            p_0_0_0483_1944_fu_122 <= conv2_i_i_lcssa969;
        end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln1056_reg_703_pp0_iter1_reg == 1'd0))) begin
            p_0_0_0483_1944_fu_122 <= zext_ln1087_fu_400_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            rhs_V_1_fu_118 <= p_0_1_0_0_0932_lcssa950975;
        end else if ((1'b1 == ap_condition_514)) begin
            rhs_V_1_fu_118 <= {{imgRgb_dout[19:10]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            rhs_V_fu_114 <= p_0_0_0_0_0930_lcssa948973;
        end else if ((1'b1 == ap_condition_514)) begin
            rhs_V_fu_114 <= trunc_ln1064_fu_245_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            rhs_fu_110 <= p_0_2_0_0_0934_lcssa946971;
        end else if ((1'b1 == ap_condition_514)) begin
            rhs_fu_110 <= {{imgRgb_dout[29:20]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln1056_fu_207_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            x_fu_106 <= x_2_fu_213_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            x_fu_106 <= 17'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        icmp_ln1056_reg_703 <= icmp_ln1056_fu_207_p2;
        icmp_ln1056_reg_703_pp0_iter1_reg <= icmp_ln1056_reg_703;
        icmp_ln1114_reg_711_pp0_iter1_reg <= icmp_ln1114_reg_711;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1056_reg_703_pp0_iter1_reg == 1'd0))) begin
        b_V_reg_769 <= {{ret_V_5_fu_547_p2[11:2]}};
        g_V_reg_764 <= {{ret_V_3_fu_502_p2[11:2]}};
        icmp_ln1027_1_reg_754 <= icmp_ln1027_1_fu_422_p2;
        icmp_ln1027_reg_739 <= icmp_ln1027_fu_404_p2;
        icmp_ln1031_1_reg_749 <= icmp_ln1031_1_fu_416_p2;
        icmp_ln1031_reg_744 <= icmp_ln1031_fu_410_p2;
        r_V_reg_759 <= {{ret_V_fu_457_p2[11:2]}};
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1056_fu_207_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln1062_reg_707 <= icmp_ln1062_fu_219_p2;
        icmp_ln1114_reg_711 <= icmp_ln1114_fu_225_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        icmp_ln1114_reg_711_pp0_iter2_reg <= icmp_ln1114_reg_711_pp0_iter1_reg;
        rhs_1_reg_715_pp0_iter2_reg <= rhs_1_reg_715;
        rhs_V_2_reg_723_pp0_iter2_reg <= rhs_V_2_reg_723;
        rhs_V_4_reg_731_pp0_iter2_reg <= rhs_V_4_reg_731;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        rhs_1_reg_715 <= rhs_fu_110;
        rhs_V_2_reg_723 <= rhs_V_fu_114;
        rhs_V_4_reg_731 <= rhs_V_1_fu_118;
    end
end

always @ (*) begin
    if (((icmp_ln1056_fu_207_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln1056_reg_703_pp0_iter1_reg == 1'd1))) begin
        ap_condition_exit_pp0_iter2_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter2_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter2_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_x_1 = 17'd0;
    end else begin
        ap_sig_allocacmp_x_1 = x_fu_106;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_predicate_op41_read_state2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        imgRgb_blk_n = imgRgb_empty_n;
    end else begin
        imgRgb_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op41_read_state2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        imgRgb_read = 1'b1;
    end else begin
        imgRgb_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (icmp_ln1114_reg_711_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        imgUnzip_blk_n = imgUnzip_full_n;
    end else begin
        imgUnzip_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1114_reg_711_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        imgUnzip_write = 1'b1;
    end else begin
        imgUnzip_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln1056_reg_703_pp0_iter1_reg == 1'd0))) begin
        p_0_0_0480942_out_o = rhs_V_4_reg_731;
    end else begin
        p_0_0_0480942_out_o = p_0_0_0480942_out_i;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln1056_reg_703_pp0_iter1_reg == 1'd0))) begin
        p_0_0_0480942_out_o_ap_vld = 1'b1;
    end else begin
        p_0_0_0480942_out_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln1056_reg_703_pp0_iter1_reg == 1'd0))) begin
        p_0_0_0481940_out_o = rhs_V_2_reg_723;
    end else begin
        p_0_0_0481940_out_o = p_0_0_0481940_out_i;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln1056_reg_703_pp0_iter1_reg == 1'd0))) begin
        p_0_0_0481940_out_o_ap_vld = 1'b1;
    end else begin
        p_0_0_0481940_out_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln1056_reg_703_pp0_iter1_reg == 1'd0))) begin
        p_0_0_0482938_out_o = rhs_1_reg_715;
    end else begin
        p_0_0_0482938_out_o = p_0_0_0482938_out_i;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln1056_reg_703_pp0_iter1_reg == 1'd0))) begin
        p_0_0_0482938_out_o_ap_vld = 1'b1;
    end else begin
        p_0_0_0482938_out_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln1056_reg_703_pp0_iter1_reg == 1'd0))) begin
        p_0_0_0483935_out_o = p_0_0_0483_1944_fu_122;
    end else begin
        p_0_0_0483935_out_o = p_0_0_0483935_out_i;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln1056_reg_703_pp0_iter1_reg == 1'd0))) begin
        p_0_0_0483935_out_o_ap_vld = 1'b1;
    end else begin
        p_0_0_0483935_out_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1056_reg_703_pp0_iter1_reg == 1'd1))) begin
        p_0_0_0483_1944_out_ap_vld = 1'b1;
    end else begin
        p_0_0_0483_1944_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1056_reg_703_pp0_iter1_reg == 1'd1))) begin
        rhs_V_2_out_ap_vld = 1'b1;
    end else begin
        rhs_V_2_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1056_reg_703_pp0_iter1_reg == 1'd1))) begin
        rhs_V_out_ap_vld = 1'b1;
    end else begin
        rhs_V_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1056_reg_703_pp0_iter1_reg == 1'd1))) begin
        rhs_out_ap_vld = 1'b1;
    end else begin
        rhs_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln1084_1_fu_378_p2 = (zext_ln1084_2_fu_374_p1 + zext_ln1084_3_fu_336_p1);

assign add_ln1084_fu_368_p2 = (zext_ln1084_fu_322_p1 + zext_ln1084_1_fu_364_p1);

assign add_ln1495_2_fu_492_p2 = (zext_ln1495_6_fu_480_p1 + zext_ln1495_7_fu_488_p1);

assign add_ln1495_4_fu_537_p2 = (zext_ln1495_9_fu_525_p1 + zext_ln1495_10_fu_533_p1);

assign add_ln1495_fu_447_p2 = (zext_ln1495_1_fu_435_p1 + zext_ln1495_3_fu_443_p1);

assign and_ln1099_1_fu_604_p2 = (xor_ln1031_1_fu_599_p2 & icmp_ln1027_1_reg_754);

assign and_ln1099_fu_594_p2 = (xor_ln1031_fu_589_p2 & icmp_ln1027_reg_739);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((icmp_ln1114_reg_711_pp0_iter2_reg == 1'd0) & (imgUnzip_full_n == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b1)) | ((ap_predicate_op41_read_state2 == 1'b1) & (imgRgb_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((icmp_ln1114_reg_711_pp0_iter2_reg == 1'd0) & (imgUnzip_full_n == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b1)) | ((ap_predicate_op41_read_state2 == 1'b1) & (imgRgb_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((icmp_ln1114_reg_711_pp0_iter2_reg == 1'd0) & (imgUnzip_full_n == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b1)) | ((ap_predicate_op41_read_state2 == 1'b1) & (imgRgb_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state2_pp0_stage0_iter1 = ((ap_predicate_op41_read_state2 == 1'b1) & (imgRgb_empty_n == 1'b0));
end

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state4_pp0_stage0_iter3 = ((icmp_ln1114_reg_711_pp0_iter2_reg == 1'd0) & (imgUnzip_full_n == 1'b0));
end

always @ (*) begin
    ap_condition_514 = ((icmp_ln1062_reg_707 == 1'd1) & (icmp_ln1056_reg_703 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

always @ (*) begin
    ap_predicate_op41_read_state2 = ((icmp_ln1062_reg_707 == 1'd1) & (icmp_ln1056_reg_703 == 1'd0));
end

assign icmp_ln1027_1_fu_422_p2 = ((p_0_0_0483_1944_fu_122 < zext_ln1087_fu_400_p1) ? 1'b1 : 1'b0);

assign icmp_ln1027_fu_404_p2 = ((p_0_0_0483935_out_i < p_0_0_0483_1944_fu_122) ? 1'b1 : 1'b0);

assign icmp_ln1031_1_fu_416_p2 = ((p_0_0_0483935_out_i < p_0_0_0483_1944_fu_122) ? 1'b1 : 1'b0);

assign icmp_ln1031_fu_410_p2 = ((p_0_0_0483_1944_fu_122 < zext_ln1087_fu_400_p1) ? 1'b1 : 1'b0);

assign icmp_ln1056_fu_207_p2 = ((ap_sig_allocacmp_x_1 == loopWidth) ? 1'b1 : 1'b0);

assign icmp_ln1062_fu_219_p2 = ((ap_sig_allocacmp_x_1 < zext_ln1040_cast_fu_175_p1) ? 1'b1 : 1'b0);

assign icmp_ln1114_fu_225_p2 = ((ap_sig_allocacmp_x_1 == 17'd0) ? 1'b1 : 1'b0);

assign imgUnzip_din = {{{select_ln1099_2_fu_627_p3}, {select_ln1099_fu_615_p3}}, {select_ln1099_1_fu_621_p3}};

assign lshr_ln1084_1_fu_326_p4 = {{rhs_V_fu_114[9:1]}};

assign lshr_ln1084_2_fu_340_p4 = {{rhs_V_fu_114[9:3]}};

assign lum_fu_384_p2 = (add_ln1084_1_fu_378_p2 + zext_ln1084_4_fu_350_p1);

assign op_assign_fu_390_p4 = {{lum_fu_384_p2[9:3]}};

assign or_ln1099_fu_609_p2 = (and_ln1099_fu_594_p2 | and_ln1099_1_fu_604_p2);

assign p_0_0_0483_1944_out = p_0_0_0483_1944_fu_122;

assign ret_V_3_fu_502_p2 = (zext_ln1495_8_fu_498_p1 + zext_ln1495_2_fu_484_p1);

assign ret_V_5_fu_547_p2 = (zext_ln1495_11_fu_543_p1 + zext_ln1495_4_fu_529_p1);

assign ret_V_6_fu_428_p3 = {{rhs_1_reg_715}, {1'd0}};

assign ret_V_7_fu_473_p3 = {{rhs_V_2_reg_723}, {1'd0}};

assign ret_V_8_fu_518_p3 = {{rhs_V_4_reg_731}, {1'd0}};

assign ret_V_fu_457_p2 = (zext_ln1495_5_fu_453_p1 + zext_ln1495_fu_439_p1);

assign rhs_V_2_out = rhs_V_4_reg_731;

assign rhs_V_out = rhs_V_2_reg_723;

assign rhs_out = rhs_1_reg_715;

assign select_ln1099_1_fu_621_p3 = ((or_ln1099_fu_609_p2[0:0] == 1'b1) ? g_V_reg_764 : rhs_V_2_reg_723_pp0_iter2_reg);

assign select_ln1099_2_fu_627_p3 = ((or_ln1099_fu_609_p2[0:0] == 1'b1) ? r_V_reg_759 : rhs_1_reg_715_pp0_iter2_reg);

assign select_ln1099_fu_615_p3 = ((or_ln1099_fu_609_p2[0:0] == 1'b1) ? b_V_reg_769 : rhs_V_4_reg_731_pp0_iter2_reg);

assign trunc_ln1064_fu_245_p1 = imgRgb_dout[9:0];

assign trunc_ln1084_1_fu_354_p4 = {{rhs_V_1_fu_118[9:3]}};

assign trunc_ln1_fu_312_p4 = {{rhs_fu_110[9:2]}};

assign x_2_fu_213_p2 = (ap_sig_allocacmp_x_1 + 17'd1);

assign xor_ln1031_1_fu_599_p2 = (icmp_ln1031_1_reg_749 ^ 1'd1);

assign xor_ln1031_fu_589_p2 = (icmp_ln1031_reg_744 ^ 1'd1);

assign zext_ln1040_cast_fu_175_p1 = zext_ln1040;

assign zext_ln1084_1_fu_364_p1 = trunc_ln1084_1_fu_354_p4;

assign zext_ln1084_2_fu_374_p1 = add_ln1084_fu_368_p2;

assign zext_ln1084_3_fu_336_p1 = lshr_ln1084_1_fu_326_p4;

assign zext_ln1084_4_fu_350_p1 = lshr_ln1084_2_fu_340_p4;

assign zext_ln1084_fu_322_p1 = trunc_ln1_fu_312_p4;

assign zext_ln1087_fu_400_p1 = op_assign_fu_390_p4;

assign zext_ln1495_10_fu_533_p1 = p_0_0_0480942_out_i;

assign zext_ln1495_11_fu_543_p1 = add_ln1495_4_fu_537_p2;

assign zext_ln1495_1_fu_435_p1 = rhs_fu_110;

assign zext_ln1495_2_fu_484_p1 = ret_V_7_fu_473_p3;

assign zext_ln1495_3_fu_443_p1 = p_0_0_0482938_out_i;

assign zext_ln1495_4_fu_529_p1 = ret_V_8_fu_518_p3;

assign zext_ln1495_5_fu_453_p1 = add_ln1495_fu_447_p2;

assign zext_ln1495_6_fu_480_p1 = rhs_V_fu_114;

assign zext_ln1495_7_fu_488_p1 = p_0_0_0481940_out_i;

assign zext_ln1495_8_fu_498_p1 = add_ln1495_2_fu_492_p2;

assign zext_ln1495_9_fu_525_p1 = rhs_V_1_fu_118;

assign zext_ln1495_fu_439_p1 = ret_V_6_fu_428_p3;

endmodule //design_1_v_demosaic_0_0_ZipperRemoval_Pipeline_VITIS_LOOP_1056_2
